# Default values for ikawarinode.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: petitpapas/ikawarinode
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {
#  "cni.projectcalico.org/ipv4pools": "[\"ikawari-ip-pool\"]",
  "cni.projectcalico.org/ipAddrs": "[\"10.1.156.84\"]"
}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
####Node Settings####
node:
  #Test network. Defaults to 0.
  testnet: 1
  #Regression test network. Defaults to 0.
  regtest: 0
  #Minimum fee rate. Defaults to 10000.
  #mintxfee=10000
  #maxtxfee=100000000
  #Fallback fee rate. Defaults to 25000.
  #fallbackfee=25000
  #Minimum relay fee rate. Defaults to 10000.
  #minrelaytxfee=10000
  datadir: nodedata
  ports:
    - name: p2p
      containerPort: 35001
      protocol: TCP
    - name: rpc
      containerPort: 35002
      protocol: TCP
    - name: api
      containerPort: 35003
      protocol: TCP

network:
  #Enable to maintain a full transaction index.<0 or 1>
  tx_index: 1
  #Disallow connection to peers in same IP range. Default is 1 for remote hosts.<0 or 1>
  iprange_filtering: 0
  #Accept connections from the outside.<0 or 1>
  listen: 1
  port: 35001

  #Add a node to connect to and attempt to keep the connection open. Can be specified multiple times.
  nodes:
    - ip: 10.0.0.5
      port: 35001

  rpc:
    #Activate RPC Server (default: 0)
    server: 1
    user: rpc_user
    password: rpc_ikawari
    #Where the RPC Server binds (default: 127.0.0.1 and ::1)
    rpc_bind: 0.0.0.0
    rpc_port: 35002
    #Ip address allowed to connect to RPC (default all: 0.0.0.0 and ::)
    allow_ip:
      - ip: 10.0.0.0/8
  api:
    uri: http://0.0.0.0
    port: 35003
    #Use HTTPS protocol on the API. Default is false.
    use_https: false
    #Enable the Web Socket endpoints. Defaults to false.
    enableWS: false
    #Enable the node UI. Defaults to true.
    enableUI: true
    #Enable the node API. Defaults to true.
    enableAPI: true
    #Enable authentication on the node API. Defaults to true.
    enableAuth: true
    #Please refer to .Net Core documentation for usage: 'https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate2.-ctor?view=netcore-2.1#System_Security_Cryptography_X509Certificates_X509Certificate2__ctor_System_Byte___'.
    #certificatefilepath=

#Whitelist peers having the given IP:port address, both inbound or outbound. Can be specified multiple times.
whitelist:
  - peer:
    ip: 10.1.156.89
    port: 35001
  - peer:
    ip: 10.1.156.87
    port: 35001

wallets:
  enable_default: false
  default:
    #Creates a wallet with the specified name and the specified password. It will be created if it doesn't exist and can be unlocked on startup when unlockdefaultwallet is set to 1.
    wallet_name: default
    #Overrides the default wallet password. Default: default.
    wallet_password: default
    #A value indicating whether to unlock the supplied default wallet on startup. Default 0.
    unlock: false

miner:
  #Enable POW mining.
  mine: 1
  #Enable POS.
  stake: true
  #The address to use for mining (empty string to select an address from the wallet).
  mine_address:
  #The wallet name to use when staking.
  wallet_name: default
  #Password to unlock the wallet.
  wallet_password: default

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: dcfa-node.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
